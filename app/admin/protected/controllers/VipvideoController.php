<?phpnamespace app\controllers;use lib\models\VipVideo;use yii\extend\AdCommon;use yii;use yii\VideoCloud\Storage\UploadManager;use lib\wyim\video;//VIP视频控制器class VipvideoController extends TemplateController{    public $config = [        'modelName' => 'lib\models\VipVideo',        'modelShortName' => 'VipVideo',        'listUrl' => 'VipVideo',        'addUrl' => 'VipVideoAdd',        'delUrl' => 'VipVideoDel',        'chgUrl' => 'VipVideoEdit',        'addTitle' => '添加',        'addFormName' => '参数',        'chgTitle' => '修改',        'chgFormName' => '参数',        'listTitle' => '标签列表',        'listFormName' => '参数',    ];    //可搜索的选项    public function getSearch()    {        return [            'title' => '标题'        ];    }    public function actionIndex()    {        $this->data['search'] = $this->getSearch();        $this->setIndexData();        $this->data['config'] = $this->config;        $this->data['title'] = $this->getIndexField();        return $this->view('index');    }    public function actionChange()    {        $id = $this->get('id');        if ( empty($id) ){            $this->error(\Yii::t('app', 'error'));        }        $model = $this->config['modelName']::findOne($id);        if ($this->isPost())        {            $data = $this->post( $this->config['modelShortName'] );            $images = Yii::$app->getRequest()->post('thumbnail');            if(!empty($images)) {                $data['thumbnail'] = json_encode($images['url']);            }            if(!empty($data['local_address'])) {                $local_address =  str_replace(\lib\models\Setting::keyTovalue('upload_domain'),dirname(ROOT,2).DIRECTORY_SEPARATOR.'app'.DIRECTORY_SEPARATOR.'upload',$data['local_address']);                $data['local_address'] = $local_address;            }            $model->attributes = AdCommon::array_clear_null($data);            $model->save();            if(!empty($local_address) && is_file($local_address)) {                $ret = video::upload( $local_address );                if (!$ret) {                    $this->success(\yii::t('app', 'success'), \yii::$app->params['url'][$this->config['listUrl']]);                } else {                    $model->wy_name = $ret['objectName'] ?? '';                    $model->wy_vid = $ret['vid'] ?? '';                    $model->upload_status = 1;                    unlink($local_address);                    $model->save();                }            }            if (empty($model->errors))            {                $this->success(\Yii::t('app', 'success'), \yii::$app->params['url'][$this->config['listUrl']]);            }            else            {                $this->error(AdCommon::modelMessage($model->errors));            }        }        $setting = $this->getOption();        foreach($setting as $k => $v)        {            if($v['key'] == 'local_address' && $model->upload_status) {                unset($setting[$k]);            }            elseif($v['key'] == 'thumbnail') {                $setting[$k]['value'] = json_decode($model[$v['key']]);                continue;            }else {                $setting[$k]['value'] = $model[$v['key']];            }        }        $this->data['fieldOption'] = $setting;        $this->config['method'] = 'change';        $this->data['config'] = $this->config;        return $this->view('window');    }    /**     * [actionIndex 删除]     * @return [type] [description]     */    public function actionDel()    {        $id = $this->post('data');        if( empty($id) ){            $this->error(\Yii::t('app', 'error'));        }        $query = $this->config['modelName']::findOne($id);        if($query)        {            if(is_file($query->local_address)) {                unlink($query->local_address);            }            if($query->wy_vid) {                \lib\wyim\video::delete($query->wy_vid);            }            $query->delete();            $this->success(\Yii::t('app', 'success'));        }        else        {            $this->error(\Yii::t('app', 'fail'));        }    }    public function actionAdd()    {        if( $this->isPost() )        {            set_time_limit(0);            $data = $this->post( $this->config['modelShortName'] );            $images = Yii::$app->getRequest()->post('thumbnail');            if(!empty($images)) {                $data['thumbnail'] = json_encode($images['url']);            }            $model = new $this->config['modelName'];            if(!empty($data['local_address'])) {                $local_address =  str_replace(\lib\models\Setting::keyTovalue('upload_domain'),dirname(ROOT,2).DIRECTORY_SEPARATOR.'app'.DIRECTORY_SEPARATOR.'upload',$data['local_address']);                $data['local_address'] = $local_address;            }            $model->attributes = AdCommon::array_clear_null($data);            $data['date'] = time();            $model->save();            if(!empty($local_address) && is_file($local_address)) {                $ret = video::upload( $local_address );                if ( !$ret ) {                    $this->success(\yii::t('app', 'success'), \yii::$app->params['url'][$this->config['listUrl']]);                } else {                    $model->wy_name = $ret['objectName'] ?? '';                    $model->wy_vid = $ret['vid'] ?? '';                    $model->upload_status = 1;                    unlink($local_address);                    $model->save();                }            }            if(empty($model->errors))            {                $this->success(\yii::t('app', 'success'), \yii::$app->params['url'][$this->config['listUrl']]);            }            else            {                $this->error(AdCommon::modelMessage($model->errors));            }        }        $this->data['fieldOption'] = $this->getOption();        $this->config['method'] = 'add';        $this->data['config']= $this->config;        return $this->view('window');    }    //批量上传文件    public function actionMadd()    {        $this->data['fieldOption'] = $this->getOption();        $this->config['method'] = 'add';        $this->data['config'] = $this->config;        return $this->view('mwindow');    }    //接受多文件上传    public function actionPostmadd()    {        global $app_root;        $title = Yii::$app->getRequest()->post('title');        $count = count($_FILES['file']['name']);        $exts = explode(',',\lib\models\Setting::keyTovalue('file_ext'));        $fileexts = explode(',',\lib\models\Setting::keyTovalue('image_ext'));        $error = [];        $price = intval(Yii::$app->getRequest()->post('price'));        $vip_price = intval(Yii::$app->getRequest()->post('vip_price'));        for ($i = 0; $i < $count; $i++) {            $tmpfile = $_FILES['file']['tmp_name'][$i];            $filefix = explode(".", $_FILES['file']['name'][$i]);            $filefix=end($filefix);            $dstfile = time()."_".mt_rand().".".$filefix;            //保存视频文件            if(!in_array($filefix, $exts) || $exts == 'php'){                $error[] = $title[$i].$filefix.'格式文件不能上传';                continue;            }            if(!move_uploaded_file($tmpfile, $dstfile)) {                $error[] = $title[$i].'移动失败';                continue;            }            //保存封面图片            $dst_f_file = $this->savefile([                'tmp_name' => $_FILES['f_img']['tmp_name'][$i],                'name' => $_FILES['f_img']['name'][$i]            ], $fileexts);            //保存缩略图片            $turmb_imgs = $this->savefiles($_FILES['t_img'.$i], $fileexts);            $model = new \lib\models\VipVideo();            $model->title = $title[$i];            $model->local_address = $app_root . $dstfile;            $model->cover_string = $dst_f_file;            $model->thumbnail_json = json_encode($turmb_imgs);            $model->price = $price ?? 0;            $model->vip_price = $vip_price ?? 0;            $model->save();        }        var_dump($error);    }    private function savefiles($files, $exts)    {        $count = count($files['name']);        $local_urls = [];        for ($i = 0; $i < $count; $i++) {            $file_local_url = $this->savefile([                'tmp_name' => $files['tmp_name'][$i],                'name' => $files['name'][$i]            ], $exts);            if($file_local_url) {                $local_urls[] = $file_local_url;            }        }        return $local_urls;    }    private function savefile($file, $exts)    {        global $app_root;        $tmpfile = $file['tmp_name'];        $filefix = explode(".", $file['name'])[1] ?? '';        $dstfile = time()."_".mt_rand().".".$filefix;        //保存文件        if(in_array($filefix, $exts) && $filefix!='php' && move_uploaded_file($tmpfile, $dstfile)) {            return $app_root.$dstfile;        }        return '';    }    //添加修改中定主的字段    protected function getOption()    {        return [            ['key'=>'title','value'=>'','html'=>'text','option'=>''],            ['key'=>'description','value'=>'','html'=>'textarea','option'=>''],            ['key'=>'price','value'=>'','html'=>'text','option'=>''],            ['key'=>'vip_price','value'=>'','html'=>'text','option'=>''],            ['key'=>'cover','value'=>'','html'=>'image','option'=>''],            ['key'=>'thumbnail','value'=>'','html'=>'images','option'=>''],            ['key'=>'url','value'=>'','html'=>'text','option'=>''],            ['key'=>'local_address','value'=>'','html'=>'file','option'=>''],        ];    }    //主页中显示的字段名    public function getIndexField()    {        return [            'id',            'title',            'price',            'vip_price',            'upload_status' => [0=>'否', 1=>'是', 2=>'上传失败', 3=>'上传中'],        ];    }}?>