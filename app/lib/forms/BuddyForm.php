<?phpnamespace lib\forms;use lib\vendor\imagine\Image\Point;use Yii;use lib\models\Buddy;use lib\models\BuddyGroup;use lib\wyim\wyim;use lib\models\User;use yii\extend\AdCommon;use lib\nodes\Notice;use lib\traits\formEngineTrait;//好友表单class BuddyForm extends CaptchaForm{    use formEngineTrait;    public $iid;    public $user_id;    public $group_id;    public $buddy_accid;    public $buddy_id;    public $remark;    public $keyword;    public function scenarios()    {        return [            'add' => [                'user_id',                'group_id',                'buddy_id',            ],            'delete' => [                'buddy_id',                'user_id',            ],            'move' => [                'buddy_id',                'user_id',                'group_id',            ],            'remark' =>[                'buddy_id',                'remark'            ],            'applyAdd' => [                'user_id',                'buddy_id',            ],            'agreeAdd' => [                'user_id',                'buddy_id',            ],            'refuseAdd' => [                'user_id',                'buddy_id',            ],        ];    }    public function rules()    {        return [            [['iid', 'user_id', 'buddy_id', 'remark', 'buddy_accid'], 'required'],            ['group_id', 'required', 'on' => ['move']],            [['iid', 'user_id', 'group_id', 'buddy_id'], 'integer'],            [['remark'], 'string', 'max' => 15],            [['buddy_accid'], 'string', 'max' => 20],        ];    }    public function attributeLabels()    {        return [        ];    }    //添加好友    public function add()    {        if($this->validate())        {            $defaultGroupId = \lib\models\SystemBuddyGroup::getDefaultGroupIid();            $model = new Buddy();            $model->user_id = $this->user_id;            $model->buddy_id = $this->buddy_id;            $model->group_id = $defaultGroupId;            $model->save();            $model = new Buddy();            $model->user_id = $this->buddy_id;            $model->buddy_id = $this->user_id;            $model->group_id = $defaultGroupId;            $model->save();            return true;        }    }    //申请添加    public function applyAdd() {                if($this->validate())        {            if($this->user_id == $this->buddy_id) {                $this->addError('iid', '接收方不能是自己!');                return false;            }            if(Buddy::bIsaBuddy($this->user_id,$this->buddy_id)) {                $this->addError('iid', '你们已经是好友了!');                return false;            }                        $buddyModel = User::findOne($this->buddy_id);                        if(!$buddyModel) {                $this->addError('iid', '该用户不存在 !');                return false;            }            $userModel = User::findOne($this->user_id);                        //添加验证记录到数据库中            $result = UserVerifyInfoForm::execute('adduser',['user_id'=>$this->user_id,'target_id'=>$this->buddy_id]);                        if(!$result) {                $this->addError('iid', UserVerifyInfoForm::$error);                return false;            }            //向网易发送信息            Notice::applyAddBuddy($buddyModel->wy_accid, $userModel, ['iid' => $result]);            return true;        }    }    //同意添加    public function agreeAdd() {        if($this->validate())        {            $userModel = User::findOne($this->user_id);            $buddyModel = User::findOne($this->buddy_id);            //发送网易信息            if(wyim::addBuddy($userModel, $buddyModel)) {                //添加到好友数据库中                $this->setScenario('add');                $this->user_id = $userModel->iid;                $this->buddy_id = $buddyModel->iid;                $this->add();                //发送成功加好友通知                Notice::agreeAddBuddy($buddyModel->wy_accid, $userModel);                return true;            } else {                $this->addError('iid', wyim::$error);                return false;            }        }    }    //拒绝添加    public function refuseAdd() {        if($this->validate())        {            $buddyModel = User::findOne($this->buddy_id);            if($buddyModel) {                $userModel = User::findOne($this->user_id);                //发送网易信息                Notice::refuseAddBuddy($buddyModel->wy_accid, $userModel);            }            return true;        }    }    //删除好友    public function delete()    {        if($this->validate()) {            $userModel = User::findOne($this->user_id);            $buddyModel = User::findOne($this->buddy_id);            //发送网易信息            wyim::deleteBuddy($userModel, $buddyModel);            Buddy::deleteBuddy($this->buddy_id, $this->user_id);                        return ['buddy_id'=>$this->buddy_id];        }    }    //网易好友列表    public function buddylist()    {        $userModel = User::findOne($this->user_id);        return wyim::buddylist(['accid'=>$userModel->wy_accid, 'createtime'=>time()]);    }    //移动好友    public function move()    {        if($this->validate())        {            return \lib\models\BuddyGroup::moveBuddyToOtherGroup($this->user_id,$this->buddy_id,$this->group_id);        }    }    }