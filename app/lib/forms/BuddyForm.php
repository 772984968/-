<?php/*namespace lib\forms;use Yii;use lib\models\Buddy;//好友表单class BuddyForm extends CaptchaForm{    public $iid;    public $user_id;    public $group_id;    public $buddy_id;    public $remark;    public function scenarios()    {        return [            'add' => [                'user_id',                'group_id',                'buddy_id',            ],            'delete' => [                'iid',                'user_id',            ],            'move' => [                'iid',                'user_id',                'group_id',            ],            'remark' =>[                'buddy_id',                'remark'            ],        ];    }    public function rules()    {        return [            [['iid', 'user_id', 'group_id', 'buddy_id', 'remark'], 'required'],            [['iid', 'user_id', 'group_id', 'buddy_id'], 'integer'],            [['remark'], 'string', 'max' => 15],        ];    }    public function attributeLabels()    {        return [        ];    }    public function add()    {        if($this->validate())        {            $model = new BuddyGroup();            $model->user_id = $this->user_id;            $model->name = $this->name;            if( $model->save() ) {                return ['iid'=>$model->iid, 'name'=>$this->name];            } else {                $this->addError('iid', Yii::t('common','fail'));            }        }    }    public function update()    {        if($this->validate())        {            $model = BuddyGroup::findOne(['user_id'=>$this->user_id, 'iid'=>$this->iid]);            if(!$model) {                $this->addError('iid', '分组不存在');                return false;            }            $model->name = $this->name;            if( $model->save() ) {                return ['iid'=>$this->iid, 'name'=>$this->name];            } else {                $this->addError('iid', Yii::t('common','fail'));                return false;            }        }    }    public function delete()    {        if($this->validate())        {            $model = BuddyGroup::findOne(['user_id'=>$this->user_id, 'iid'=>$this->iid]);            if(!$model) {                $this->addError('iid', '分组不存在');                return false;            }            if($model->system_group_id) {                $this->addError('iid', '该分组不能删除');                return false;            }            if( $model->delete() ) {                return ['iid'=>$this->iid];            } else {                $this->addError('iid', Yii::t('common','fail'));                return false;            }        }    }    public function remark()    {        if($this->validate())        {            $model = BuddyGroup::findOne(['user_id'=>$this->user_id, 'iid'=>$this->iid]);            if(!$model) {                $this->addError('iid', '分组不存在');                return false;            }            if( $model->move($this->top) ) {                return true;            } else {                $this->addError('iid', Yii::t('common','fail'));                return false;            }        }    }}*/