<?phpnamespace lib\forms;use Yii;use lib\models\BuddyGroup;//好友分组表单class BuddyGroupForm extends CaptchaForm{    public $iid;    public $user_id;    public $name;    public $top;    public function scenarios()    {        return [            'add' => [                'user_id',                'name',            ],            'update' => [                'iid',                'user_id',                'name',            ],            'delete' => [                'iid',                'user_id',            ],            'move' => [                'iid',                'top',            ]        ];    }    public function rules()    {        return [            [['iid', 'user_id', 'name', 'top'], 'required'],            [['iid', 'user_id', 'top'], 'integer'],            [['name'], 'string', 'max' => 20],            ['name','uniqueName', 'on'=>['add']],            ['name','uniqueUpdateName', 'on'=>['update']],        ];    }    public function attributeLabels()    {        return [            'name' => '名称',        ];    }        public function uniqueName($attribute,$params)    {        if(!$this->errors && BuddyGroup::has($this->user_id, $this->name)) {            $this->addError($attribute, $this->name.'已经存在');        }    }    public function uniqueUpdateName($attribute,$params)    {        if(!$this->errors){            $result = BuddyGroup::has($this->user_id, $this->name);            if( !$result ) {                return true;            }            if($result->iid != $this->iid) {                $this->addError($attribute, $this->name.'已经存在');            } else {                $this->addError($attribute, '请修改名称后再提交');            }        }    }    public function add()    {        if($this->validate())        {            $model = new BuddyGroup();            $model->user_id = $this->user_id;            $model->name = $this->name;            if( $model->save() ) {                return ['iid'=>$model->iid, 'name'=>$this->name];            } else {                $this->addError('iid', Yii::t('common','fail'));            }        }    }    public function update()    {        if($this->validate())        {            $model = BuddyGroup::findOne(['user_id'=>$this->user_id, 'iid'=>$this->iid]);            if(!$model) {                $this->addError('iid', '分组不存在');                return false;            }            $model->name = $this->name;            if( $model->save() ) {                return ['iid'=>$this->iid, 'name'=>$this->name];            } else {                $this->addError('iid', Yii::t('common','fail'));                return false;            }        }    }    public function delete()    {        if($this->validate())        {            $model = BuddyGroup::findOne(['user_id'=>$this->user_id, 'iid'=>$this->iid]);            if(!$model) {                $this->addError('iid', '分组不存在');                return false;            }            if($model->system_group_id) {                $this->addError('iid', '该分组不能删除');                return false;            }            if( $model->delete() ) {                return ['iid'=>$this->iid];            } else {                $this->addError('iid', Yii::t('common','fail'));                return false;            }        }    }    public function move()    {        if($this->validate())        {            $model = BuddyGroup::findOne(['user_id'=>$this->user_id, 'iid'=>$this->iid]);            if(!$model) {                $this->addError('iid', '分组不存在');                return false;            }                        if( $model->move($this->top) ) {                return true;            } else {                $this->addError('iid', Yii::t('common','fail'));                return false;            }        }    }}