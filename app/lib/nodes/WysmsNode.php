<?phpnamespace lib\nodes;use Yii;//网易短信class WysmsNode{    private static $Nonce; //随机数（最大长度128个字符）    private static $CurTime; //当前UTC时间戳，从1970年1月1日0点0 分0 秒开始到现在的秒数(String)    private static $CheckSum;//SHA1(AppSecret + Nonce + CurTime),三个参数拼接的字符串，进行SHA1哈希计算，转化成16进制字符(String，小写)    const   HEX_DIGITS = "0123456789abcdef";    public static $code;  //验证码    private static $RequestType = 'fsockopen';  //请求方式    const REGISTER_TEMPLATE = '305554811';      //注册短信模版    const FIND_TEMPLATE = '';   //找回密码短信模版    const APP_KEY = '1afd0cff01e8f89a6f7f1655905c0d67';    const APP_SECRET = 'ff28807bcae3';    const POST_URL = 'https://api.netease.im/sms/sendtemplate.action';    //创建随机验证码    private static function create_rand()    {        self::$code = 6666;        //self::$code = mt_rand(100000,999999);    }    /**     * API checksum校验生成     * @param  void     * @return $CheckSum(对象私有属性)     */    public static function checkSumBuilder(){        //此部分生成随机字符串        $hex_digits = self::HEX_DIGITS;        self::$Nonce;        for($i=0;$i<60;$i++){          //随机字符串最大128个字符，也可以小于该数            self::$Nonce.= $hex_digits[rand(0,15)];        }        self::$CurTime = (string)(time());  //当前时间戳，以秒为单位        $join_string = self::APP_SECRET.self::$Nonce.self::$CurTime;        self::$CheckSum = sha1($join_string);        //print_r($this->CheckSum);    }    /**     * 将json字符串转化成php数组     * @param  $json_str     * @return $json_arr     */    public static function json_to_array($json_str){        if(is_null(json_decode($json_str))){            $json_str = $json_str;        }else{            $json_str = json_decode($json_str);        }        $json_arr=array();        foreach($json_str as $k=>$w){            if(is_object($w)){                $json_arr[$k]= self::json_to_array($w); //判断类型是不是object            }else if(is_array($w)){                $json_arr[$k]= self::json_to_array($w);            }else{                $json_arr[$k]= $w;            }        }        return $json_arr;    }    /**     * 使用FSOCKOPEN方式发送post请求     * @param  $url     [请求地址]     * @param  $data    [array格式数据]     * @return $请求返回结果(array)     */    public static function postDataFsockopen($data){        self::checkSumBuilder();       //发送请求前需先生成checkSum        $postdata = '';        foreach ($data as $key=>$value){            $postdata.= ($key.'='.urlencode($value).'&');        }        // building POST-request:        $URL_Info=parse_url(self::POST_URL);        if(!isset($URL_Info["port"])){            $URL_Info["port"]=80;        }        $request = '';        $request.="POST ".$URL_Info["path"]." HTTP/1.1\r\n";        $request.="Host:".$URL_Info["host"]."\r\n";        $request.="Content-type: application/x-www-form-urlencoded;charset=utf-8\r\n";        $request.="Content-length: ".strlen($postdata)."\r\n";        $request.="Connection: close\r\n";        $request.="AppKey: ".self::APP_KEY."\r\n";        $request.="Nonce: ".self::$Nonce."\r\n";        $request.="CurTime: ".self::$CurTime."\r\n";        $request.="CheckSum: ".self::$CheckSum."\r\n";        $request.="\r\n";        $request.=$postdata."\r\n";                $fp = fsockopen($URL_Info["host"],$URL_Info["port"]);        fputs($fp, $request);        $result = '';        while(!feof($fp)) {            $result .= fgets($fp, 128);        }        fclose($fp);        $str_s = strpos($result,'{');        $str_e = strrpos($result,'}');        $str = substr($result, $str_s,$str_e-$str_s+1);        return self::json_to_array($str);    }    //注册短信验证码    public static function register($mobile)    {        self::create_rand();        return true;        $params=[ self::$code ];        $data= array(            'templateid' => self::REGISTER_TEMPLATE,            'mobiles' => json_encode([$mobile]),            'params' => json_encode($params),        );        if(self::$RequestType=='curl'){            $result = self::postDataCurl($data);        }else{            $result = self::postDataFsockopen($data);        }        if( isset($result['code']) && $result['code'] == 200 ) {            return true;        } else {            $result['mobile'] = $mobile;            $result['time'] = date('Y-m-d H:i:s',time());            \lib\models\CodeLog::addlog('短信发送失败',$result);            return false;        }    }    public static function find($mobile)    {        self::create_rand();        return true;        self::create_rand();        $params=[ self::$code ];        $data= array(            'templateid' => self::FIND_TEMPLATE,            'mobiles' => json_encode([$mobile]),            'params' => json_encode($params),        );        if(self::$RequestType=='curl'){            $result = self::postDataCurl($data);        }else{            $result = self::postDataFsockopen($data);        }        if( isset($result['code']) && $result['code'] == 200 ) {            return true;        } else {            $result['mobile'] = $mobile;            $result['templateid'] = self::FIND_TEMPLATE;            $result['time'] = date('Y-m-d H:i:s',time());            \lib\models\CodeLog::addlog('短信发送失败',$result);            return false;        }    }}